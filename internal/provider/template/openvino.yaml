version: "0.6"
name: openvino # the name should be aligned with file name
services:
    text-to-image:
        task_type: "text-to-image"
        protocol: "GRPC"
        expose_protocol: "HTTP"
        url: "127.0.0.1:9000"
        endpoints: [""]
        extra_url: ""
        auth_type: ""
        install_raw_routes: # also install routes without aog prefix in url path
        default_model: "OpenVINO/stable-diffusion-v1-5-fp16-ov"
        request_segments: 1 # request
        extra_headers: "{}"
        request_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "prompt": prompt,
                         "batch":$exists(n) ? n : 1,
                         "size": $exists(size) ? size : "1024*1024"
                      }

                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        request_from_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "prompt": prompt,
                         "batch":$exists(n) ? n : 1,
                         "size": $exists(size) ? size : "1024*1024"
                      }

                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        response_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                          "url": local_path
                      }
        response_from_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                           "id": request_id,
                           "data": {
                              "url": output.results[0].url
                                  }
                      }
    speech-to-text:
        task_type: "speech-to-text"
        protocol: "GRPC"
        expose_protocol: "HTTP"
        url: "127.0.0.1:9000"
        endpoints: [""]
        extra_url: ""
        auth_type: ""
        install_raw_routes: # also install routes without aog prefix in url path
        default_model: "NamoLi/whisper-large-v3-ov"
        request_segments: 1 # request
        extra_headers: "{}"
        request_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "audio": audio,
                         "language":language
                      }

                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        request_from_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "audio": audio,
                         "language":language
                      }
                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        response_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                          "segments": segments
                      }
        response_from_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                           "id": request_id,
                           "data": {
                              "url": output.results[0].url
                                  }
                      }
    speech-to-text-ws:
        task_type: "speech-to-text"
        protocol: "GRPC_STREAM"
        expose_protocol: "WEBSOCKET"
        url: "127.0.0.1:9000"
        endpoints: [""]
        extra_url: ""
        auth_type: ""
        install_raw_routes: # also install routes without aog prefix in url path
        default_model: "NamoLi/whisper-large-v3-ov"
        request_segments: 1 # request
        extra_headers: "{}"
        request_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "audio": audio,
                         "params":params
                      }

                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        request_from_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "audio": audio,
                         "params":params
                      }
                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        response_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                          "segments": segments
                      }
        response_from_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                           "id": request_id,
                           "data": {
                              "url": output.results[0].url
                                  }
                      }

    text-to-speech:
        task_type: "text-to-speech"
        protocol: "GRPC"
        expose_protocol: "HTTP"
        url: "127.0.0.1:9000"
        endpoints: [""]
        extra_url: ""
        auth_type: ""
        install_raw_routes: # also install routes without aog prefix in url path
        default_model: "NamoLi/speecht5-tts"
        request_segments: 1 # request
        extra_headers: "{}"
        request_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "text": text,
                         "voice":$exists(voice) ? voice : "male"
                      }

                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        request_from_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                         "model": $model,
                         "text": text,
                         "voice":$exists(voice) ? voice : "male"
                      }

                - converter: header
                  config:
                      set:
                          Content-Type: application/json
        response_to_aog:
            conversion:
                - converter: jsonata
                  config: |
                      {
                          "url": url
                      }
